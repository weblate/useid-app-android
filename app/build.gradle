plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jmailen.kotlinter'
    id 'de.mannodermaus.android-junit5'
    id 'kotlinx-serialization'
    id 'com.google.devtools.ksp'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "de.digitalService.useID"
        minSdk 28
        targetSdk 32
        versionCode 3
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "nfc"
    productFlavors {
        device {
            dimension = "nfc"
        }
        emulator {
            dimension = "nfc"
        }
    }

    variantFilter { variant ->
        def flavors = variant.flavors*.name
        if (flavors.contains("emulator") && variant.buildType.name == "release") {
            setIgnore(true)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-Xopt-in=kotlin.RequiresOptIn",
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material3:material3:1.0.0-alpha13"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.navigation:navigation-compose:2.4.2"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    implementation 'io.github.raamcosta.compose-destinations:core:1.6.12-beta'
    ksp 'io.github.raamcosta.compose-destinations:ksp:1.6.12-beta'

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.3"

    implementation 'androidx.security:security-crypto-ktx:1.1.0-alpha03'

    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-compiler:2.42"

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.2'
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "io.mockk:mockk-agent-jvm:$mockk_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    implementation 'org.openecard.clients:android-lib:2.1.2'

    implementation 'xerces:xercesImpl:2.12.0'

    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'com.github.tony19:logback-android:2.0.0'
}

kotlinter {
    ignoreFailures = false
    reporters = ['checkstyle', 'plain']
    experimentalRules = true
    disabledRules = [
            "no-wildcard-imports"
    ]
}

lintKotlinAndroidTest {
    exclude '**/*.kt'
}

lintKotlinTest {
    exclude '**/*.kt'
}
